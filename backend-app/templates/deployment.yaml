apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend-app.fullname" . }}
  labels:
    {{- include "backend-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backend-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}_{{ required "image version required" .Values.image.appVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
          - name: DB_URL
            valueFrom:
              secretKeyRef:
                key: db-url
                name: dbconfig
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: db-username
                name: dbconfig
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: db-password
                name: dbconfig
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30            
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
